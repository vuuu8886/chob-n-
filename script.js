// T·∫≠p h·ª£p love ƒë∆∞·ª£c ch·∫°m
const loveTaps = new Set();
let userName = '';

// ----- C√ì TH·ªÇ T√ôY CH·ªàNH ·ªû ƒê√ÇY -----
const thoiGianChoGiay = 5; // S·ªë gi√¢y ƒë·∫øm ng∆∞·ª£c (v√≠ d·ª•: 7 gi√¢y)
const trangWebChuyenHuong = " https://vuuu8886.github.io/tangemx/"; // ƒê∆∞·ªùng d·∫´n web mu·ªën chuy·ªÉn ƒë·∫øn (v√≠ d·ª• vui)
// ----- K·∫æT TH√öC PH·∫¶N T√ôY CH·ªàNH -----

function startApp() {
  const stageIds = ['cardStage', 'startStage', 'inputStage', 'loveStage'];
  const stages = Object.fromEntries(stageIds.map(id => [id, document.getElementById(id)]));

  if (Object.values(stages).some(stage => !stage)) {
    console.error('Thi·∫øu m·ªôt trong c√°c element stage!');
    Swal.fire('L·ªói!', 'Kh√¥ng t√¨m th·∫•y m·ªôt s·ªë th√†nh ph·∫ßn c·ªßa trang. Vui l√≤ng th·ª≠ l·∫°i.', 'error');
    return;
  }

  stages.startStage.style.display = 'none';
  stages.inputStage.style.display = 'block'; // S·∫Ω b·ªã ·∫©n ngay b·ªüi SweetAlert
  stages.loveStage.style.display = 'none';
  stages.cardStage.style.display = 'none';

  const bgMusic = document.getElementById('bgMusic');
  if (bgMusic) {
    bgMusic.play().catch(err => {
      console.warn('Kh√¥ng th·ªÉ t·ª± ƒë·ªông ph√°t nh·∫°c:', err);
      // C√≥ th·ªÉ th√™m m·ªôt n√∫t ƒë·ªÉ ng∆∞·ªùi d√πng ch·ªß ƒë·ªông b·∫≠t nh·∫°c n·∫øu mu·ªën
    });
  }

  inipesan();
}

// Hi·ªáu ·ª©ng g√µ ch·ªØ
function typeWriterEffect(text, elementId, callback) {
  const element = document.getElementById(elementId);
  if (!element) {
    console.error(`Kh√¥ng t√¨m th·∫•y element v·ªõi ID: ${elementId}`);
    return;
  }

  let i = 0;
  const speed = 50; // T·ªëc ƒë·ªô g√µ ch·ªØ (ms)
  element.innerHTML = ''; // X√≥a n·ªôi dung c≈© tr∆∞·ªõc khi g√µ

  function type() {
    if (i < text.length) {
      element.innerHTML += text.charAt(i);
      i++;
      setTimeout(type, speed);
    } else {
      console.log('Hi·ªáu ·ª©ng g√µ ho√†n t·∫•t');
      if (callback) callback();
    }
  }
  type();
}

function switchStage(fromId, toId, withFade = false) {
  const fromElement = document.getElementById(fromId);
  const toElement = document.getElementById(toId);

  if (!fromElement || !toElement) {
    console.error(`Kh√¥ng t√¨m th·∫•y element: ${fromId} ho·∫∑c ${toId}`);
    return;
  }

  if (withFade) {
    fromElement.classList.add('hidden'); // Th√™m class ƒë·ªÉ b·∫Øt ƒë·∫ßu transition CSS
    setTimeout(() => {
      fromElement.style.display = 'none';
      // fromElement.classList.remove('hidden'); // X√≥a class sau khi ·∫©n h·∫≥n
      
      toElement.style.display = 'block';
      // Bu·ªôc reflow ƒë·ªÉ animation/transition c·ªßa toElement ho·∫°t ƒë·ªông ƒë√∫ng
      // eslint-disable-next-line no-unused-expressions
      toElement.offsetHeight; 
      toElement.classList.remove('hidden'); // X√≥a class ƒë·ªÉ ch·∫°y transition CSS (n·∫øu c√≥)
    }, 1000); // Th·ªùi gian kh·ªõp v·ªõi transition trong CSS
  } else {
    fromElement.style.display = 'none';
    toElement.style.display = 'block';
    toElement.classList.remove('hidden'); // ƒê·∫£m b·∫£o stage m·ªõi kh√¥ng b·ªã class hidden
  }
}

function tapLove(id) {
  if (loveTaps.has(id)) return;

  const loveIcon = document.querySelector(`#loveIcons .love-icon:nth-child(${id})`);
  if (loveIcon) {
    loveIcon.classList.add('tapped');
  }
  loveTaps.add(id);
  console.log(`Ch·∫°m love ${id}, t·ªïng: ${loveTaps.size}`);

  if (loveTaps.size === 4) {
    Swal.fire({
      title: 'ƒê·ªß 4 love r·ªìi n√®!',
      text: 'S·∫µn s√†ng nh·∫≠n qu√† ch∆∞a? üíñ',
      timer: 1500,
      icon: 'success',
      showConfirmButton: false,
      background: '#fffbe7',
      customClass: { title: 'swal-title', content: 'swal-text' }
    }).then(() => {
      switchStage('loveStage', 'cardStage', true);

      const loveMsgElement = document.getElementById('loveMsg');
      if (!loveMsgElement) {
          console.error('Kh√¥ng t√¨m th·∫•y element loveMsg!');
          return;
      }

      typeWriterEffect(
        `Ch√∫c ${userName} em b√© c·ªßa anhh lu√¥n xinh ƒë·∫πp lu√¥n d·ªÖ th∆∞∆°ng cute , v√¨ em r·ª±c r·ª° nh∆∞ m·∫∑t tr·ªùi, ƒë√¢u th·ªÉ ƒë·ªÉ h√¥m nay bu·ªìn x√°m ƒë∆∞·ª£c!‚òÄÔ∏è
Em b√© ∆°i, m·ªát th√¨ d·ª±a v√†o anh, y·∫øu l√≤ng th√¨ ƒë·ªÉ anh th∆∞∆°ng nha!üíó
Th·∫ø gi·ªõi c√≥ th·ªÉ quay cu·ªìng, nh∆∞ng anh th√¨ ch·ªâ xoay quanh m·ªói em b√© th√¥i!üåç‚ù§Ô∏è
C·ªë l√™n c√¥ng ch√∫a c·ªßa anh, v√¨ v∆∞∆°ng mi·ªán c·ªßa em ch∆∞a bao gi·ªù r∆°i c·∫£! üëë‚ú®
H√¥m nay c√≥ m·ªát kh√¥ng em b√©? ƒê∆∞a anh h·∫øt m·ªát m·ªèi, nh·∫≠n l·∫°i √¥m y√™u n√® ü§óüíï
ƒê·ª´ng qu√™n l√†, em kh√¥ng ch·ªâ c√≥ m·ªôt ng√†y, em c√≤n c√≥ c·∫£ anh!üòö
Em b√© m·∫°nh m·∫Ω l·∫Øm, nh∆∞ng v·∫´n ƒë∆∞·ª£c quy·ªÅn d·ª±a v√†o anh m√†!üí™üíû
M·ªói l·∫ßn em mu·ªën b·ªè cu·ªôc, nh·ªõ c√≥ anh ƒëang ch·ªù em ·ªü cu·ªëi ch·∫∑ng ƒë∆∞·ªùng nh√©! üõ§Ô∏è‚ù§Ô∏è
Y√™u em b√© l√† ƒëi·ªÅu d·ªÖ nh·∫•t, c√≤n l√†m em vui l√† ƒëi·ªÅu anh lu√¥n mu·ªën nh·∫•t! üí¨üíò
Em b∆∞·ªõc m·ªôt b∆∞·ªõc, anh b∆∞·ªõc m∆∞·ªùi b∆∞·ªõc. Em m·ªát m·ªôt ch√∫t, anh √¥m c·∫£ ph·∫ßn c√≤n l·∫°i!" üêæüíì`,
        'loveMsg',
        () => {
          const cardElement = document.querySelector('#cardStage .card');
          if (!cardElement) {
            console.error('Kh√¥ng t√¨m th·∫•y .card element');
            return;
          }

          const countdownContainer = document.createElement("div");
          countdownContainer.id = 'countdownContainer';
          // Style cho countdownContainer ƒë√£ ƒë∆∞·ª£c ƒë·ªãnh nghƒ©a trong CSS
          
          // Ch√®n countdownContainer v√†o trong .card, sau #loveMsg
          loveMsgElement.insertAdjacentElement('afterend', countdownContainer);


          let currentSeconds = thoiGianChoGiay;

          const updateCountdown = () => {
            if (currentSeconds > 0) {
              countdownContainer.innerHTML = `M·ªôt b·∫•t ng·ªù nh·ªè d√†nh cho em s·∫Ω xu·∫•t hi·ªán sau: <br><strong>${currentSeconds} gi√¢y</strong> n·ªØa! üòâ`;
              currentSeconds--;
            } else {
              countdownContainer.innerHTML = "Chu·∫©n b·ªã nh·∫≠n b·∫•t ng·ªù n√†ooooo... üöÄ";
              clearInterval(countdownInterval);
              setTimeout(() => {
                  window.location.href = trangWebChuyenHuong;
              }, 1500); // ƒê·ª£i 1.5 gi√¢y sau khi th√¥ng b√°o cu·ªëi c√πng r·ªìi m·ªõi chuy·ªÉn trang
            }
          };

          const countdownInterval = setInterval(updateCountdown, 1000);
          updateCountdown(); // Hi·ªÉn th·ªã l·∫ßn ƒë·∫ßu ngay l·∫≠p t·ª©c
        }
      );
    });
  }
}

async function inipesan() {
  // ·∫®n inputStage v√¨ SweetAlert s·∫Ω thay th·∫ø n√≥
  const inputStageElement = document.getElementById('inputStage');
  if (inputStageElement) inputStageElement.style.display = 'none';

  const { value: typedName, isConfirmed } = await Swal.fire({
    title: 'ƒê·ªÉ nh·∫≠n qu√†, nh·∫≠p t√™n c·ªßa b√© iu v√†o ƒë√¢y nha:',
    input: 'text',
    inputPlaceholder: 'T√™n b√© iu...',
    inputValue: '',
    allowOutsideClick: false,
    allowEscapeKey: false,
    showConfirmButton: true,
    confirmButtonText: 'X√°c nh·∫≠n <i class="fas fa-check"></i>', // icon n·∫øu c√≥ FontAwesome
    confirmButtonColor: '#ff4081',
    validationMessage: 'T√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng ƒë√¢u n√®!  xinh g√°i vi·∫øt t√™n v√†o ƒë√¢y nh√©',
    customClass: { title: 'swal-title', content: 'swal-text' },
    preConfirm: (name) => {
      if (!name || name.trim() === '') {
        Swal.showValidationMessage('T√™n kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng ƒë√¢u n√®! xinh g√°i vi·∫øt t√™n v√†o ƒë√¢y nh√©');
        return false; // NgƒÉn ƒë√≥ng popup
      }
      return name.trim();
    }
  });

  if (isConfirmed && typedName) {
    userName = typedName;
    loveTaps.clear(); // Reset s·ªë l·∫ßn ch·∫°m love
    document.querySelectorAll('.love-icon').forEach(icon =>
      icon.classList.remove('tapped')
    );
    // ƒê·∫£m b·∫£o inputStage (d√π ƒë√£ ·∫©n) kh√¥ng g√¢y c·∫£n tr·ªü
    // v√† chuy·ªÉn sang loveStage
    switchStage('inputStage', 'loveStage'); 
  } else {
    // Ng∆∞·ªùi d√πng nh·∫•n cancel ho·∫∑c ƒë√≥ng popup m√† kh√¥ng nh·∫≠p t√™n
    await Swal.fire({
      icon: 'info',
      title: 'Ti·∫øc qu√°!',
      text: 'B·∫°n c·∫ßn nh·∫≠p t√™n ƒë·ªÉ ti·∫øp t·ª•c. H√£y nh·∫•n v√†o h·ªôp qu√† ƒë·ªÉ th·ª≠ l·∫°i nh√©!',
      confirmButtonText: 'OK',
      confirmButtonColor: '#ff4081',
      customClass: { title: 'swal-title', content: 'swal-text' }
    });
    // ƒê∆∞a v·ªÅ m√†n h√¨nh ban ƒë·∫ßu
    document.getElementById('startStage').style.display = 'block';
    document.getElementById('loveStage').style.display = 'none';
    document.getElementById('cardStage').style.display = 'none';
    if (inputStageElement) inputStageElement.style.display = 'none';
  }
}

// T√πy ch·ªçn: N·∫øu mu·ªën ƒë·∫£m b·∫£o c√°c stage b·ªã ·∫©n khi ch∆∞a c·∫ßn thi·∫øt
document.addEventListener('DOMContentLoaded', () => {
  document.getElementById('inputStage').style.display = 'none';
  document.getElementById('loveStage').style.display = 'none';
  document.getElementById('cardStage').style.display = 'none';
});